<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxk.management.registration_record.dao.Registration_recordDao">
    <sql id="columns">id,reg_class_id,registration_id,examine_id,reg_record_py,reg_receiver_id,reg_record_ident,
          reg_record_status,reg_record_date,reg_receiver_date,reg_record_type,execute_record_status,examine_record_status,
          reg_record_content,reg_record_describe,createUserId,createDate,updateUserId,updateDate,deleteFlag</sql>

    <sql id="columnsMap">id,reg_class_id,registration_id,examine_id,reg_record_py,reg_record_status,reg_record_date,
          execute_record_status,reg_record_content,reg_record_describe</sql>

    <resultMap id="reg_recordMap" type="java.util.HashMap">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="reg_class_id" property="reg_class_id" jdbcType="VARCHAR"/>
        <result column="registration_id" property="registration_id" jdbcType="VARCHAR"/>
        <result column="examine_id" property="examine_id" jdbcType="VARCHAR"/>
        <result column="reg_record_py" property="reg_record_py" jdbcType="VARCHAR"/>
        <result column="reg_record_status" property="reg_record_status" jdbcType="VARCHAR"/>
        <result column="reg_record_date" property="reg_record_date" jdbcType="VARCHAR"/>
        <result column="execute_record_status" property="execute_record_status" jdbcType="VARCHAR"/>
        <result column="reg_record_content" property="reg_record_content" jdbcType="VARCHAR"/>
        <result column="reg_record_describe" property="reg_record_describe" jdbcType="VARCHAR"/>
    </resultMap>

    <!--获取分页 -->
    <select id="listRegistration_record"  resultType="com.xxk.management.registration_record.entity.Registration_record">
        select
        <include refid="columns"></include>
        from xxk_registration where deleteFlag='0' ORDER BY createDate desc limit #{0},#{1};
    </select>

    <select id="getRecordAccordRegistration"  resultType="com.xxk.management.registration_record.entity.Registration_record">
        select
        <include refid="columns"></include>
        from xxk_registration_record
        where reg_record_py= #{0}
          and registration_id in (
        select id
        from xxk_registration
        where reg_office_id=#{1}
        )
          and reg_record_status= #{2}
          and deleteFlag='0'
        ORDER BY reg_record_date desc;
    </select>

    <select id="getRecordByRegistrationId"  resultType="com.xxk.management.registration_record.entity.Registration_record">
        select
        <include refid="columns"></include>
        from xxk_registration_record
        where registration_id=#{0}
        and reg_record_status= #{1}
        and deleteFlag='0'
        ORDER BY reg_record_date desc;
    </select>

    <select id="getRegistration_recordByOffice"  resultType="com.xxk.management.registration_record.entity.Registration_record">
        select
        <include refid="columns"></include>
        from xxk_registration_record
        where  registration_id in (
        select id
        from xxk_registration
        where reg_office_id=#{office_id}
        ) and reg_record_status in
        <foreach collection="statusList" item="status" index="index"
                 open="(" close=")" separator=",">
            #{status}
        </foreach>
        ORDER BY reg_record_date desc;
    </select>

    <select id="getRegistration_recordByReceiver"  resultType="com.xxk.management.registration_record.entity.Registration_record">
        select
        <include refid="columns"></include>
        from xxk_registration_record
        where
        reg_receiver_id=#{receiver_id}
        <if test="office_id!=null and ''!= office_id">
            and registration_id in (
            select id
            from xxk_registration
            where exe_office_id=#{office_id}
            )
        </if>
        and reg_record_status in
        <foreach collection="statusList" item="status" index="index"
                 open="(" close=")" separator=",">
            #{status}
        </foreach>
        ORDER BY reg_record_date desc;
    </select>

    <select id="getRegistration_recordById" resultMap="reg_recordMap">
        select
        <include refid="columnsMap"></include>
        from xxk_registration_record
        where id=#{0}
          and deleteFlag='0';
    </select>

    <insert id="addRegistration_record" parameterType="com.xxk.management.registration_record.entity.Registration_record">
        insert into xxk_registration_record(<include refid="columns"></include>) values(
        #{id},#{reg_class_id},#{registration_id},#{examine_id},#{reg_record_py},#{reg_receiver_id},#{reg_record_ident},
        #{reg_record_status},#{reg_record_date},#{reg_receiver_date},#{reg_record_type},#{execute_record_status},#{examine_record_status},
        #{reg_record_content},#{reg_record_describe},#{createUserId},#{createDate},#{updateUserId},#{updateDate},#{deleteFlag});
    </insert>

    <insert id="addListRegistration_record" parameterType="java.util.List" >
        insert into TABLE_NAME (<include refid="columns"></include>)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{id},#{reg_class_id},#{registration_id},#{examine_id},#{reg_record_py},#{reg_record_ident},#{reg_record_status},#{reg_record_date},
            #{reg_record_type},#{execute_record_status},#{examine_record_status},#{reg_record_content},#{reg_record_describe},
            #{createUserId},#{createDate},#{updateUserId},#{updateDate},#{deleteFlag})
            )
        </foreach>
    </insert>

    <!--修改信息 -->
    <update id="updateRegistration_record" parameterType="com.xxk.management.registration_record.entity.Registration_record">
        update xxk_registration set reg_date=#{reg_date},reg_type=#{reg_type},reg_content=#{reg_content},
        updateUserId=#{updateUserId},updateDate=#{updateDate} where id=#{id} and deleteFlag='0';
    </update>

    <update id="updateRegistration_recordStatus" >
        update xxk_registration_record
        set reg_record_status=#{1},reg_receiver_id=#{2}, reg_receiver_date=#{3},updateUserId=#{2},updateDate=#{3}
        where id=#{0} and reg_record_status!=#{1} and deleteFlag='0';
    </update>

    <update id="updateOnlyRegistration_recordStatus" >
        update xxk_registration_record
        set reg_record_status=#{1},updateUserId=#{2},updateDate=#{3}
        where id=#{0} and reg_record_status!=#{1} and deleteFlag='0';
    </update>

    <update id="updateRegistration_recordExeStatus" >
        update xxk_registration_record
        set execute_record_status=#{1},updateUserId=#{2},updateDate=#{3}
        where id=#{0} and execute_record_status!=#{1} and deleteFlag='0';
    </update>

    <!--批量修改（批量逻辑删除） -->
    <!--以下的批量方法只能删除数据表的一样数据-->
    <update id="deleteRegistration" parameterType="java.util.List">
        UPDATE xxk_registration SET deleteFlag ='1' WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

</mapper>